name: CI - Build & Test Spring Boot App

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: BackEnd/emergency-hospital-allocation

    steps:
    - name: ‚¨áÔ∏è Checkout code
      uses: actions/checkout@v4
      
    - name: üß± Start Keycloak
      run: |
        docker run -d \
          --name keycloak \
          -p 8081:8080 \
          -e KEYCLOAK_ADMIN=admin \
          -e KEYCLOAK_ADMIN_PASSWORD=admin \
          quay.io/keycloak/keycloak:24.0.1 \
          start-dev
          
    - name: ‚è≥ Wait for Keycloak to start
      run: |
        for i in {1..30}; do
          curl -s http://localhost:8081/realms/master || sleep 2
        done

    - name: ‚öôÔ∏è Configure Keycloak realm and client
      run: |
        docker exec keycloak /opt/keycloak/bin/kcadm.sh config credentials --server http://localhost:8080 --realm master --user admin --password admin
    
        docker exec keycloak /opt/keycloak/bin/kcadm.sh create realms -s realm=medhead -s enabled=true
    
        docker exec keycloak /opt/keycloak/bin/kcadm.sh create clients -r medhead -s clientId=emergency-app \
          -s enabled=true \
          -s 'redirectUris=["http://localhost:8080/*"]' \
          -s 'publicClient=false' \
          -s 'secret=5VgmTTTjjvoyx19TErAOSxtcke0VbcbC' \
          -s 'standardFlowEnabled=true'




    - name: ‚öôÔ∏è Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 17
        
    

    - name: üõ†Ô∏è Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: üß™ Build and run tests
      run: ./gradlew build

    - name: ‚úÖ Archive test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: BackEnd/emergency-hospital-allocation/build/reports/tests/test
        
    - name: üöÄ Trigger CD pipeline
      if: success()
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        event-type: trigger-cd
