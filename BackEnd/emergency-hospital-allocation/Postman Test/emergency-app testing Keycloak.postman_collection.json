{
	"info": {
		"_postman_id": "ca1e530c-c2d1-4c68-b7d1-30031050331f",
		"name": "emergency-app testing Keycloak",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23621902"
	},
	"item": [
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"An access token is returned\", () => {",
							"    pm.expect(pm.response.code).to.eql(200);",
							"    const json = pm.response.json();",
							"    pm.expect(json).to.have.property(\"access_token\");",
							"    pm.collectionVariables.set(\"token\", json.access_token);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "emergency-app",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "5VgmTTTjjvoyx19TErAOSxtcke0VbcbC",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "password",
							"type": "text"
						},
						{
							"key": "username",
							"value": "dr-john",
							"type": "text"
						},
						{
							"key": "password",
							"value": "test123",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8081/realms/medhead/protocol/openid-connect/token",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"realms",
						"medhead",
						"protocol",
						"openid-connect",
						"token"
					]
				},
				"description": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "http://localhost:8080/"
		},
		{
			"key": "Authorization",
			"value": "Bearer {{token}}",
			"type": "string",
			"disabled": true
		}
	]
}